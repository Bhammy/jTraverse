{"version":3,"sources":["webpack/bootstrap cd6faf8f7fcb6100d01a","./lib/main.js","./lib/dom_node_collection.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;AC7DA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA,CAAC;;AAED;;;;;;;AC/CA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;;AAEX,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA","file":"traverse.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/lib/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cd6faf8f7fcb6100d01a","const DOMNodeCollection = require('./dom_node_collection');\n\nconst readyFunctions = [];\n\nconst $t = (arg) => {\n\n  switch (typeof arg) {\n    case ('string'):\n      let selection = Array.from(document.querySelectorAll(arg));\n      return new DOMNodeCollection(selection);\n    //if HTMLElement, create DOMNodeCollection\n    case ('object'):\n      if (arg instanceof HTMLElement) {\n        return new DOMNodeCollection([arg]);\n      }\n      return null;\n    case ('function'):\n      switch (document.readyState) {\n        case \"loading\":\n          readyFunctions.push(arg);\n          return null;\n        case \"interactive\":\n        case \"complete\":\n          arg.call();\n      }\n      return null;\n    default:\n      return null;\n  }\n};\n\n$t.extend = (obj1, ...objs) => {\n  objs.forEach( (obj) => {\n    Object.values(obj).forEach( (objVal) => obj1[objVal] = objVal);\n  });\n  return obj1;\n};\n\n$t.ajax = (options) => {\n  \n};\n\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  readyFunctions.forEach( (fn) => fn() );\n});\n\nwindow.$t = $t;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 1\n// module chunks = 0","class DOMNodeCollection {\n\n  constructor(elements) {\n    this.elements = elements;\n  }\n\n  html(string) {\n    if (string) {\n      this.elements.forEach( (el) => {\n        el.innerHTML = string;\n      });\n    } else {\n      return this.elements[0].innerHTML;\n    }\n  }\n\n  empty() {\n    this.elements.forEach( (el, idx) => {\n      this.elements[idx].innerHTML = \"\";\n    });\n  }\n\n  append(args) {\n      if (typeof args === 'object') {\n        if (args instanceof DOMNodeCollection) {\n          //expect that args is a DOMNodeCollection-wrapped item(s)\n          Object.values(args)[0].forEach( (arrayItem) => {\n            this.elements.forEach( (el, idx) => {\n              this.elements[idx].innerHTML += arrayItem.outerHTML;\n            });\n          });\n\n        } else {\n          //expect that args is an HTMLElement\n          this.elements.forEach( (el, idx) => {\n            this.elements[idx].innerHTML += args.outerHTML;\n          });\n        }\n      }\n\n      if (typeof args === 'string') {\n        //expect that we want to append text\n        this.elements.forEach( (el, idx) => {\n          this.elements[idx].innerHTML += argEl;\n        });\n      }\n  }\n\n  addClass(className) {\n    // get classList for each el then add new arg\n    this.elements.forEach( (el, idx) => {\n      let elClassList = el.classList;\n      elClassList.add(className);\n    });\n  }\n\n  removeClass(className) {\n    // get classList for each el then remove  arg\n    this.elements.forEach( (el, idx) => {\n      let elClassList = el.classList;\n      elClassList.remove(className);\n    });\n  }\n\n  attr(attrName, newAttrVal) {\n    //if no new val, assume user wants current val\n    if (newAttrVal === undefined) {\n      let els = this.elements;\n      els = els.map( (el) => {\n        return el.getAttribute(attrName);\n      });\n    } else {\n      //if new val, change attrs to new val\n      this.elements.forEach( (el, idx) => {\n        if ((newAttrVal !== false) && (newAttrVal !== null)) {\n          this.elements[idx].setAttribute(attrName, newAttrVal);\n        } else {\n          this.elements[idx].removeAttribute(attrName);\n        }\n      });\n    }\n  }\n\n  children() {\n    //returns all child elements anywhere in the element collection\n    let children = [];\n\n    const getChildren = (arr) => {\n      arr.forEach( (el) => {\n        let elChildren = Array.from(el.children);\n        if (elChildren.length > 0) {\n          children = children.concat(elChildren);\n          getChildren(elChildren);\n        } else {\n        }\n      });\n    };\n    getChildren(this.elements);\n    return new DOMNodeCollection(children);\n  }\n\n  parent() {\n    //returns the parent element for the element collection, skipping dupes\n    let parents = [];\n\n    const getParent = (arr) => {\n      arr.forEach( (el) => {\n        let parentEl = el.parentElement;\n        if (!parents.includes(parentEl) ) {\n          parents.push(parentEl);\n        }\n      });\n    };\n\n    getParent(this.elements);\n\n    return new DOMNodeCollection(parents);\n  }\n\n  find(selector) {\n    let selected = [];\n\n    this.elements.forEach( (el) => {\n      selected = selected.concat( Array.from(el.querySelectorAll(selector)) );\n    });\n\n    return new DOMNodeCollection(selected);\n  }\n\n  remove() {\n    this.elements.forEach( (el, idx) => {\n      this.elements[idx].outerHTML = \"\";\n    });\n  }\n\n  on(eventType, callback) {\n    this.elements.forEach( (el) => {\n      el[eventType] = callback;\n      el.addEventListener(eventType, callback);\n    });\n  }\n\n  off(eventType) {\n    this.elements.forEach( (el) => {\n      el.removeEventListener(eventType, el[eventType]);\n    });\n  }\n\n}\n\nmodule.exports = DOMNodeCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/dom_node_collection.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}